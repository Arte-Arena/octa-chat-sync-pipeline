# docker/Dockerfile.fetch

# Etapa de build
FROM golang:1.20-alpine AS builder

# Instala dependências do sistema
RUN apk add --no-cache git

# Define diretório de trabalho
WORKDIR /app

# Copia os arquivos de modulação do Go e baixa dependências
COPY go.mod go.sum ./
RUN go mod download

# Copia código-fonte do fetch-octa e do pacote utils
COPY cmd/fetch-octa ./cmd/fetch-octa
COPY utils ./utils

# Compila o binário
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 \
    go build -ldflags="-s -w" -o /fetch-octa ./cmd/fetch-octa

# Etapa final: imagem mínima
FROM alpine:3.18

# Certificados SSL para chamadas HTTPS
RUN apk add --no-cache ca-certificates

# Copia o binário compilado
COPY --from=builder /fetch-octa /usr/local/bin/fetch-octa

# Executável padrão
ENTRYPOINT ["fetch-octa"]
